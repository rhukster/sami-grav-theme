{% macro namespace_link(namespace) -%}
    <a href="{{ namespace_path(namespace) }}">{{ namespace }}</a>
{%- endmacro %}

{% macro class_link(class, absolute) -%}
    {%- if class.projectclass -%}
        <a href="{{ class_path(class) }}">
    {%- elseif class.phpclass -%}
        <a href="http://php.net/{{ class }}">
    {%- endif %}
    {{- _self.abbr_class(class, absolute|default(false)) }}
    {%- if class.projectclass or class.phpclass %}</a>{% endif %}
{%- endmacro %}

{% macro method_link(method, absolute, classonly) -%}
    <a href="{{ method_path(method) }}">
        {{- _self.abbr_class(method.class) }}{% if not classonly|default(false) %}::{{ method.name }}{% endif -%}
    </a>
{%- endmacro %}

{% macro property_link(property, absolute, classonly) -%}
    <a href="{{ property_path(property) }}">
        {{- _self.abbr_class(property.class) }}{% if not classonly|default(true) %}#{{ property.name }}{% endif -%}
    </a>
{%- endmacro %}

{% macro abbr_class(class, absolute) -%}
    <abbr title="{{ class }}">{{ absolute|default(false) ? class : class.shortname }}</abbr>
{%- endmacro %}

{% macro class_item(class, short = false, indent = "") -%}
{{ indent }}- {{ _self.class_name(class, short) }}{% if class.shortdesc %} &mdash; {{ class.shortdesc }}{% endif %}
{%- endmacro -%}

{% macro class_name(class, short = false, suffix = "") -%}
{% spaceless -%}
{% if class.projectclass or class.phpclass %}
[`{{ short ? class.shortname : class }}{{ suffix }}`]({% if class.projectclass %}{{ _self.markdown_path(class_path(class)) }}{% else %}http://php.net/class.{{ class }}{% endif %})
{% else %}
`{{ class }}`
{% endif %}
{%- endspaceless %}
{%- endmacro -%}

{% macro class_type(class, sentence = false) -%}
{% spaceless %}
{% if class.interface %}
{% if sentence %}an {% endif %}
interface
{%- else -%}
{% if sentence %}{% if class.abstract %}an{% else %}a{% endif %} {% endif %}
{% if class.abstract %}abstract {% endif %}
class
{%- endif -%}
{% endspaceless %}
{%- endmacro -%}

{% macro hint(hint) -%}
{% spaceless %}
{% if hint.class -%}
{{ _self.class_name(hint.name, true, hint.array ? "[]" : "") }}
{%- elseif hint.name -%}
`{{ hint.name }}{% if hint.array %}[]{% endif %}`
{%- endif %}
{% endspaceless %}
{%- endmacro -%}

{% macro markdown_path(path) -%}
{% spaceless %}
{{- path|replace({".html": ""}) -}}
{% endspaceless %}
{%- endmacro -%}

{% macro member_signature(type, member) -%}
- It is a **{{ _self.member_visibility(member) }}{% if member.abstract is defined and member.abstract %} abstract{% endif %}** {{ type }}.
{% if member.final %}
- It is a **finalized** {{ type }}.
{% endif %}
{% if "property" == type %}
{% if member.hint|length > 1 %}
- It can be one of the following types:
{%- for hint in member.hint %}

    - {{ _self.hint(hint) }}
{%- endfor -%}
{%- elseif member.hint|length > 0 %}
- It is a(n) {{ _self.hint(member.hint[0]) }} value.
{%- else %}
- Its type is not specified.
{% endif %}
{% elseif "method" == type %}
{% if member.parameters %}
- It accepts the following parameter(s):
{% for parameter in member.parameters %}
    - `${{ parameter.name }}`{% if parameter.hint %} ({% for hint in parameter.hint %}{{ _self.hint(hint) }}{% if not loop.last %}|{% endif %}{% endfor %}){% endif %}{% if parameter.shortdesc %} &mdash; {{ parameter.shortdesc }}{% endif %}

{% endfor %}
{% endif %}
{% if (member.hint|length > 1) or member.hintDesc %}
{% if member.hintDesc %}
- _Returns:_ {{ member.hintDesc }}
{% else %}
- It can return one of the following values:
{% endif %}
{% for hint in member.hint %}
    - {{ _self.hint(hint) }}
{% endfor -%}
{% elseif member.hint|length > 0 %}
- It returns a(n) {{ _self.hint(member.hint[0]) }} value.
{% else %}
- It does not return anything.
{% endif %}
{% if member.exceptions %}
- It throws one of the following exceptions:
{% for exception in member.exceptions %}
    - {{ _self.class_name(exception[0]) }}{% if exception[1] is defined and exception[1] is not empty %} &mdash; {{ exception[1] }}{% endif %}

{% endfor %}
{% endif %}
{% endif %}
{%- endmacro -%}

{% macro member_visibility(member) -%}
{% spaceless %}
{% if member.private %}private{% elseif member.protected %}protected{% else %}public{% endif %}
{% if member.static %} static{% endif %}
{% endspaceless %}
{%- endmacro -%}
